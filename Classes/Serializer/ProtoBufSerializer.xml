<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Serializer.ProtoBufSerializer">
<Super>Serializer.AbstractSerializer</Super>
<TimeCreated>64127,51157.511037</TimeCreated>

<Method name="InternalSerializeDataType">
<FormalSpec>object:%DataType,stream:%Stream.Object</FormalSpec>
<Implementation><![CDATA[
	if ($number(object)'=""){
		do ..InternalSerializeZigZag(object, stream)
	}
	else {
		do ..InternalSerializeString(object, stream)
	}
]]></Implementation>
</Method>

<Method name="InternalSerializeString">
<FormalSpec>object:%DataType,stream:%Stream.Object</FormalSpec>
<Implementation><![CDATA[
	//Utf8
	set utfi = $ZCONVERT(object,"O","UTF8")
	set len = $length(utfi)
	do ..InternalSerializeVarInt(len, stream)
	$$$do(stream.Write(utfi))
]]></Implementation>
</Method>

<Method name="InternalSerializeVarInt">
<FormalSpec>object:%DataType,stream:%Stream.Object</FormalSpec>
<Implementation><![CDATA[
	set a = object
	set b = 0
	while (a'=0)
	{ 
		s b = a#128
		s a = a\128
		if (a '= 0){
			s b = b+128
		}
		$$$do(stream.Write($c(b)))
	}
	/*	do stream.Rewind()
	s a = 0
	s power = 1
	while ('stream.AtEnd ){
		set b = stream.Read(1)
		s b = $A(b)
		if (b >= 128) {
			s b=b-128
		}
		
		s a = a + (b*power)
		set power = power * 128
	}
	$$$do(stream.Write($c(a)))
	*/
]]></Implementation>
</Method>

<Method name="InternalSerializeZigZag">
<FormalSpec>object:%DataType,stream:%Stream.Object</FormalSpec>
<Implementation><![CDATA[
	set a = object
	set a = a * 2
	if (a<0){ set a = a - 1	}
	do ..InternalSerializeVarInt(a, stream)
]]></Implementation>
</Method>
</Class>
</Export>
